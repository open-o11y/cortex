name: ci
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: quay.io/cortexproject/build-image:upgrade-build-image-debian-491e60715-WIP
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Install Docker Client
        run: |
          set -x
          VER="17.03.0-ce"
          curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
          tar -xz -C /tmp -f /tmp/docker-$VER.tgz
          mv /tmp/docker/* /usr/bin
      - name: Sym Link Expected Path to Workspace
        run: |
          mkdir -p /go/src/github.com/cortexproject/cortex
          ln -s $GITHUB_WORKSPACE/* /go/src/github.com/cortexproject/cortex
      - name: Build Image
        run: |
          touch build-image/.uptodate
          make BUILD_IN_CONTAINER=false
      - name: Save Images
        run: |
          mkdir /tmp/images
          ln -s /tmp/images ./docker-images
          make BUILD_IN_CONTAINER=false save-images
      - name: Zip Images
        run: tar -cvf images.tar.gz /tmp/images
      - name: Upload Images Artifact
        uses: actions/upload-artifact@v2
        with:
          name: Docker Images
          path: ./images.tar.gz

  deploy:
    needs: [build]
    # needs: [build, test, lint, integration, integration-configs-db]
    # if: github.ref == 'refs/heads/master' && github.repository == 'cortexproject/cortex'
    runs-on: ubuntu-latest
    container:
      image: quay.io/cortexproject/build-image:upgrade-build-image-debian-491e60715-WIP
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2
      - name: Sym link expected path to github workspace
        run: |
          mkdir -p /go/src/github.com/cortexproject/cortex
          ln -s $GITHUB_WORKSPACE/* /go/src/github.com/cortexproject/cortex
      - name: Install Docker Client
        run: |
          set -x
          VER="17.03.0-ce"
          curl -L -o /tmp/docker-$VER.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$VER.tgz
          tar -xz -C /tmp -f /tmp/docker-$VER.tgz
          mv /tmp/docker/* /usr/bin
      - name: Download Images Artifact
        uses: actions/download-artifact@v2
        with:
          name: Docker Images
      - name: Unzip Images
        run: tar -xvf images.tar.gz -C /
      - name: Load Images
        run: |
          ln -s /tmp/images ./docker-images
          echo "$(ls ./docker-images)"
          make BUILD_IN_CONTAINER=false load-images
      - name: Deploy
        run: |
          if [ -n "$DOCKER_REGISTRY_PASSWORD" ]; then
            docker login -u "$DOCKER_REGISTRY_USER" -p "$DOCKER_REGISTRY_PASSWORD"
          fi
          if [ -n "$QUAY_PASSWORD" ]; then
            docker login -u "$QUAY_USER" -p "$QUAY_PASSWORD" quay.io;
          fi
          IMAGE_TAG=$GIT_TAG ./push-images $NOQUAY
        env:
          DOCKER_REGISTRY_PASSWORD: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
          DOCKER_REGISTRY_USER: ${{secrets.DOCKER_REGISTRY_USER}}
          QUAY_PASSWORD: ${{secrets.QUAY_PASSWORD}}
          QUAY_USER: ${{secrets.QUAY_USER}}
          GIT_TAG: ${{github.event.release.tag_name}}
          NOQUAY: ${{secrets.NOQUAY}}
